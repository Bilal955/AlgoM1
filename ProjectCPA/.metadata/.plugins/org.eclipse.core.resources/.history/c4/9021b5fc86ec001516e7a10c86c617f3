package algorithms;

import java.awt.Point;
import java.util.ArrayList;

import utils.Utils;

public class DefaultTeam {
  public Tree2D calculSteiner(ArrayList<Point> points, int edgeThreshold, ArrayList<Point> hitPoints) {
	  
	 Tree2D result;
	 double oldScore, newScore;
	System.out.println("hitPoints size = "+ hitPoints.size());
	Tree2D t = SteinerHeuristic.calcSteinerHeuristic(points, edgeThreshold, hitPoints);
	System.out.println("Score = "+Utils.score(t));
	
	result = RegleDuBarycentre.regleDuBarycentre3(t, points);
	
	oldScore = Utils.score(t);
	newScore = oldScore;
	
	while(newScore < oldScore) {
		oldScore = newScore;
		result = RegleDuBarycentre.regleDuBarycentre3(result, points);
		
		newScore = Utils.score(result);
	}
	
    return result;
  }
  
  
  
  public Tree2D calculSteinerBudget(ArrayList<Point> points, int edgeThreshold, ArrayList<Point> hitPoints) {

	  int budget = 1664;
	  Tree2D treeBudget = SteinerHeuristic.steinerBudget(points, edgeThreshold, hitPoints);

    return treeBudget;
  }
  
  
}
